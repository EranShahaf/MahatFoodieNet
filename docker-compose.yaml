version: "3.9"

x-db-env: &db-env
  POSTGRES_USER: admin
  POSTGRES_PASSWORD: admin123
  POSTGRES_DB: mydb

x-s3-env: &s3-env
  MINIO_ROOT_USER: minioadmin
  MINIO_ROOT_PASSWORD: minioadmin123
  MINIO_ENDPOINT: minio
  MINIO_PORT: 9000
  MINIO_USE_SSL: false
  MINIO_ACCESS_KEY: minioadmin
  MINIO_SECRET_KEY: minioadmin123

services:
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"   # API
      - "9001:9001"   # Console
    environment:
      <<: *s3-env
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      <<: *db-env
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backend/scripts/db/:/docker-entrypoint-initdb.d/:ro

  backend:
    build:
      context: ./backend
      target: prod
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "5000:5000"
    environment:
      <<: [*db-env, *s3-env]
      JWT_SECRET: super_secret_foodienet
      JWT_EXPIRE_IN: 1h
    depends_on:
      - postgres
      - minio
  
  init-users:
    build:
      context: ./backend
    command: >
      bash -c "
      echo '⏳ Waiting for backend...' &&
      until curl -s http://backend:5000/api/hello > /dev/null; do sleep 2; done &&
      echo '🚀 Backend is up, running init script...' &&
      node scripts/initUsers.js
      "
    depends_on:
      - backend
    environment:
      API_URL: http://backend:5000

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:80"
    environment:
      REACT_APP_API_URL: http://localhost:5000
    depends_on:
      - backend

volumes:
  minio-data:
  postgres-data:
